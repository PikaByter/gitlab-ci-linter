# yaml-language-server: $schema=https://gitlab.com/gitlab-org/gitlab/-/raw/master/app/assets/javascripts/editor/schema/ci.json

stages:
  - checks
  - build

variables:
  CGO_ENABLED: 0
  COVERAGEREPORTDIR: "_build/coverage"

## -- Check stage -------------------------------------------------------------

lint:
  image: golangci/golangci-lint
  stage: checks
  script:
    - golangci-lint run

govulncheck:
  image: golang:1.23
  stage: checks
  script:
    - go install golang.org/x/vuln/cmd/govulncheck@latest
    - govulncheck -show color ./...

# A test job template, to make different test jobs by branch/tags
.go test: &_go_test_template
  image: golang:1.23
  stage: checks
  variables:
    GOTESTFLAGS: -v
  script:
    - mkdir -p $COVERAGEREPORTDIR
    - go test -cover --covermode=atomic --coverprofile=$COVERAGEREPORTDIR/main.cover ./...
    - go tool cover -func $COVERAGEREPORTDIR/main.cover
    - go tool cover -html $COVERAGEREPORTDIR/main.cover -o $COVERAGEREPORTDIR/main.html
  coverage: /^total:\s*\(statements\)\s*(\d+.\d+)\%/

# Coverage on branches are only kept for 1 week
go test:
  <<: *_go_test_template
  only:
    - branches
  artifacts:
    paths:
      - $COVERAGEREPORTDIR/
    expire_in: 1 week

# Coverage results on tags are kept much longer (1 year)
go test release:
  <<: *_go_test_template
  only:
    - tags
  artifacts:
    paths:
      - $COVERAGEREPORTDIR/
    expire_in: 1 year

## -- Build stage -------------------------------------------------------------

dev build:
  stage: build
  image:
    name: goreleaser/goreleaser
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_BRANCH
  script:
    - goreleaser release --clean --snapshot --skip=publish
  artifacts:
    paths:
      - .build/dist/
    expire_in: 1 week

release:
  stage: build
  image:
    name: goreleaser/goreleaser
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_TAG && '$CI_COMMIT_TAG =~ /^v\d+.\d+.\d+$/'
  variables:
    # Disable shallow cloning so that goreleaser can diff between tags to
    # generate a changelog.
    GIT_DEPTH: 0
  script:
    - goreleaser release --clean
