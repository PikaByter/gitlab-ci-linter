image: registry.gitlab.com/orobardet/gitlab-ci-linter/build

stages:
  - vendors
  - checks
  - build

before_script:
  - ln -s $CI_PROJECT_DIR $GOPATH/src/
  - cd $GOPATH/src/$(basename $CI_PROJECT_DIR)

get vendors:
  stage: vendors
  script:
    - dep ensure
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    paths:
      - vendor/
    expire_in: 1 hour

gofmt:
  stage: checks
  script: gofmt -s -l -e $(find . -name "*.go" -type f -not -path "./vendor/*")

govet:
  stage: checks
  script: go vet

.build_binary: &_binary
  stage: build
  dependencies:
    - get vendors
  script: |
    export GOTARGET=${CI_JOB_NAME##* }
    export GOOS=${GOTARGET%%-*}
    export GOARCH=${GOTARGET##*-}
    export EXT="$([[ "$GOOS" = "windows" ]] && echo ".exe")"
    export BINARY=gitlab-ci-linter.${GOOS}-${GOARCH}${EXT}
    if [[ $VERSION ]] ; then export VERSION=${VERSION##v} ; fi
    make

.build_binary_dev: &_binary_dev
  <<: *_binary
  variables:
    DEBUG: "1"
  only:
   - branches
  artifacts:
    name: "${CI_JOB_NAME}"
    paths:
      - gitlab-ci-linter.*
    expire_in: 1 week

.build_binary_release: &_binary_release
  <<: *_binary
  variables:
    VERSION: ${CI_COMMIT_TAG}
  only:
   - tags
  artifacts:
    name: "${CI_JOB_NAME}"
    paths:
      - gitlab-ci-linter.*
    expire_in: 1 year

dev build linux-386: *_binary_dev
dev build linux-amd64: *_binary_dev
dev build linux-arm: *_binary_dev
dev build linux-arm64: *_binary_dev
dev build windows-386: *_binary_dev
dev build windows-amd64: *_binary_dev
dev build darwin-386: *_binary_dev
dev build darwin-amd64: *_binary_dev

release build linux-386: *_binary_release
release build linux-amd64: *_binary_release
release build linux-arm: *_binary_release
release build linux-arm64: *_binary_release
release build windows-386: *_binary_release
release build windows-amd64: *_binary_release
release build darwin-386: *_binary_release
release build darwin-amd64: *_binary_release
